@using Umbraco.Forms.Core
@using Umbraco.Forms.Mvc.Models
@using Umbraco.Forms.Mvc.BusinessLogic
@using Umbraco.Forms.MVC.Extensions
@using Umbraco.Web
@using ClientDependency.Core.Mvc;

@model Umbraco.Forms.Mvc.Models.FormViewModel
@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}



@if (Model.SubmitHandled)
{
    if (Model.RenderMode == "full" || Model.RenderMode == "form")
    {
        <p class="contourMessageOnSubmit">@Html.Raw(Model.MessageOnSubmit)</p>
    }
}
else
{
    if (Model.RenderMode == "full" || Model.RenderMode == "form")
    {
         <div id="contour_form_@{@Model.FormName.Replace(" ", "")}" class="@Model.CssClass">

             @using (Html.BeginUmbracoForm<Umbraco.Forms.Web.Controllers.UmbracoFormsController>("HandleForm"))
             {
                 <input type="hidden" name="FormId" value="@Model.FormId" />
                 @Html.HiddenFor(x => Model.FormName)
                 @Html.HiddenFor(x => Model.RecordId)
                 @Html.HiddenFor(x => Model.PreviousClicked)

                 <input type="hidden" name="FormStep" value="@Model.FormStep" />

                 <div class="contourPage">
                
                     @if (string.IsNullOrEmpty(Model.CurrentPage.Caption) == false)
                     {
                        <h3 class="title title-contact">@Html.Raw(Model.CurrentPage.Caption)</h3>
                     }
                
                     @if (Model.ShowValidationSummary)
                     {
                         @Html.ValidationSummary(false)
                     }

                     <div class="contact-form">
                     @foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets)
                     {
                        <fieldset id="@fs.Id">
                                @foreach (var c in fs.Containers)
                                {

                                        foreach (FieldViewModel f in c.Fields)
                                        {
                                            bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;
                                                
                                                    @Html.Partial(FieldViewResolver.GetFieldView(Model.FormId.ToString(), f.FieldTypeName, f.Caption), f)
                                                    @*if (Model.ShowFieldValidaton)
                                                    {
                                                        @Html.ValidationMessage(f.Id)
                                                    }*@

                                        }

                                }

                        </fieldset>
                     }

                     <div style="display: none">
                         <input type="text" name="@Model.FormId.ToString().Replace("-", "")" />
                     </div>


                     <div class="footer-form">
                         <input type="submit" id="submit-btn" class="btn btn-color hover-animate" value="Send Message" />
                     </div>
                         </div>
                 </div>
             }
         </div>

    }

    if (Model.RenderMode == "full" || Model.RenderMode == "script")
    {
        @Html.Partial(FormViewResolver.GetScriptView(Model.FormId), Model)

        foreach (var script in Model.CurrentPage.JavascriptFiles)
        {
            if (Model.UseClientDependency)
            {
                Html.RequiresJs(script.Value);
            }
            else
            {
                <script type="text/javascript" src="@Url.Content(script.Value)"></script>
            }
        }

        if (Model.CurrentPage.JavascriptCommands.Count > 0)
        {

            <script type="text/javascript">
                @foreach (var cmd in Model.CurrentPage.JavascriptCommands)
                {
                    <text>@Html.Raw(cmd)</text>
                }
        
            </script>
        }

        foreach (var css in Model.CurrentPage.CssFiles)
        {
            if (Model.UseClientDependency)
            {
                Html.RequiresCss(css.Value);
            }
            else
            {
                <link rel="stylesheet" href="@Url.Content(css.Value)" />
            }
        }

    }
}